{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","lastPageId","Math","ceil","handlePageChange","step","prevPage","className","href","onClick","console","log","map","number","App","useState","currPage","setCurrPage","itemsPerPage","setItemsPerPage","items","id","defaultValue","onChange","event","target","value","htmlFor","slice","item","ReactDOM","render","document","getElementById"],"mappings":"mKAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,CACR,C,WCCYG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAmB,SAACC,GACxBL,GAAa,SAACM,GAAD,OAAsBA,EAAWD,CAAjC,GACd,EAED,OACE,qBAAIE,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAA+B,IAAhBR,EAAoB,WAAa,IAA7D,SACE,mBACE,UAAQ,WACRQ,UAAU,YACVC,KAAK,QACL,gBAAc,OACdC,QAAS,WAEPC,QAAQC,IAAI,SACZP,GAAkB,EACnB,EATH,oBAcDd,EAAW,EAAGW,GAAYW,KAAI,SAAAC,GAAM,OACnC,oBACEN,UAAS,oBAAeM,IAAWd,EAAc,SAAW,IAD9D,SAIE,mBACES,KAAI,WAAMK,GACV,UAAQ,WACRN,UAAU,YACVE,QAAS,WACPL,GAAkBS,EAASd,EAC5B,EANH,SAQGc,KAZL,cAEcA,GAHqB,IAiBrC,oBAAIN,UAAS,oBAAeR,IAAgBE,EAAa,WAAa,IAAtE,SACE,mBACE,UAAQ,WACRM,UAAU,YACVC,KAAK,QACL,gBAAc,QACdC,QAAS,WAEPC,QAAQC,IAAIZ,IAAgBE,GAC5BG,EAAiB,EAClB,EATH,sBAgBP,EC/DYU,EAAgB,WAC3B,MAAgCC,mBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwCF,mBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAGMC,EAAQ9B,EAAW,EAFH,IAGnBsB,KAAI,SAAAlB,GAAC,qBAAYA,EAAZ,IAER,OACE,sBAAKa,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWS,EADX,4BAEYA,EAAW,GAAKE,EAAgB,EAF5C,uBAGKF,EAAWE,EAZE,GAahBF,EAAWE,EAbK,GASlB,wBATkB,MAkBlB,sBAAKX,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRc,GAAG,kBACHd,UAAU,eACVe,aAAcJ,EACdK,SAAU,SAACC,GACTL,GAAiBK,EAAMC,OAAOC,OAC9BT,EAAY,EACb,EARH,UAUE,wBAAQS,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBpB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MA3CgB,GA4ChBC,QAASoB,EACTnB,YAAaiB,EACbhB,aAAciB,IAEhB,6BACGG,EAAMQ,OAAOZ,EAAW,GAAKE,EAAcF,EAAWE,GACpDN,KAAI,SAAAiB,GAAI,OACP,oBAAI,UAAQ,OAAZ,SAAoBA,GADb,QAMlB,EChEDC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.7c532e90.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: CallableFunction,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const lastPageId = Math.ceil(total / perPage);\n  const handlePageChange = (step:number) => {\n    onPageChange((prevPage: number) => prevPage + step);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled=\"true\"\n          onClick={() => {\n            // eslint-disable-next-line\n            console.log('click');\n            handlePageChange(-1);\n          }}\n        >\n          «\n        </a>\n      </li>\n      {getNumbers(1, lastPageId).map(number => (\n        <li\n          className={`page-item ${number === currentPage ? 'active' : ''}`}\n          key={`elem${number}`}\n        >\n          <a\n            href={`#${number}`}\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            onClick={() => {\n              handlePageChange(+number - currentPage);\n            }}\n          >\n            {number}\n          </a>\n        </li>\n      ))}\n      <li className={`page-item ${currentPage === lastPageId ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled=\"false\"\n          onClick={() => {\n            // eslint-disable-next-line\n            console.log(currentPage === lastPageId);\n            handlePageChange(1);\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\n\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line\n\nexport const App: React.FC = () => {\n  const [currPage, setCurrPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const amountOfItems = 42;\n\n  const items = getNumbers(1, amountOfItems)\n    .map(n => `Item ${n}`);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currPage}\n        items ${((currPage - 1) * itemsPerPage) + 1} -\n        ${(currPage * itemsPerPage < amountOfItems\n      ? currPage * itemsPerPage\n      : amountOfItems)} of\n        ${amountOfItems}`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={itemsPerPage}\n            onChange={(event) => {\n              setItemsPerPage(+event.target.value);\n              setCurrPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={amountOfItems}\n        perPage={itemsPerPage}\n        currentPage={currPage}\n        onPageChange={setCurrPage}\n      />\n      <ul>\n        {items.slice((currPage - 1) * itemsPerPage, currPage * itemsPerPage)\n          .map(item => (\n            <li data-cy=\"item\">{item}</li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}